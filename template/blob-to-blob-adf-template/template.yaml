apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: docs-template
  title: Template Azure ADF Blob to Blob
  description: Create a new Template Azure ADF Blob to Blob project
  tags:
    - adf
    - blob
    - data
    - etl
spec:
  owner: my-awesome-team
  type: documentation

  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Data Factory Name
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A Data Factory description
        owner:
          title: Owner
          type: string
          description: Owner of the component

    - title: Data Location
      required:
        - location
        - storageAccountName
        - blobContainerName
      properties:
        location:
          title: Location
          type: string
          description: Location of the data factory
        storageAccountName:
          title: StorageAccountName
          type: string
          description: Name of the Azure storage account that contains the input/output data
        blobContainerName:
          title: BlobContainerName
          type: string
          description: Name of the blob container in the Azure Storage account

    - title: Choose a Repository location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch
      name: Template Docs Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          location: ${{ parameters.location }}
          storageAccountName: ${{ parameters.storageAccountName }}
          blobContainerName: ${{ parameters.blobContainerName }}          
          repoUrl: ${{ parameters.repoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
#        allowedHosts: ['gitlab.elocloud.ninja']
        allowedHosts: ['github.com']        
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
